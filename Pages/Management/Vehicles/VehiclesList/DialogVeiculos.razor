@inject VehicleService Service
@inject ISnackbar Snackbar
<MudDialog>
    <DialogContent>
        <MudText>@ContentText</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public string ContentText { get; set; }

    [Parameter] public string ButtonText { get; set; }

    [Parameter] public Color Color { get; set; }

    [Parameter] public Veiculo Veiculo { get; set; }

    private async Task Submit() {
        var response = await Service.DeleteVehicle(Veiculo.Id);
        if (response == HttpStatusCode.OK) {
            Snackbar.Add("Veiculo Deletado", Severity.Success);
        } else {
            Snackbar.Add("Ocorreu um erro ao deletar o veiculo", Severity.Error);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() {
        MudDialog.Cancel();
    }
}