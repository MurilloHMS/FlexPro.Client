@using FlexPro.Client.Domain.Models.Response
@using FlexPro.Client.Infrastructure.Services
@inject ParceiroService ParceiroService
@inject ISnackbar SnackBar

<MudDialog>
    <DialogContent>
        <MudText>@ContentText</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public string ContentText { get; set; }

    [Parameter] public string ButtonText { get; set; }

    [Parameter] public Color Color { get; set; }

    [Parameter] public ParceiroResponseDTO Parceiro { get; set; }

    public async Task Submit()
    {
        try
        {
            await ParceiroService.DeleteAsync($"api/parceiro/", Parceiro.Id);
            SnackBar.Add("Parceiro Deletado com Sucesso", Severity.Success);
        }
        catch (Exception e)
        {
            SnackBar.Add($"Ocorreu um erro ao deletar o parceiro \n Erro; {e.Message}");
        }

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }


}