@inject HttpClient Http
@inject ISnackbar SnackBar

<MudDialog>
    <DialogContent>
        <MudText>@ContentText</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string ContentText { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public Color Color { get; set; }

    [Parameter]
    public Cliente Cliente { get; set; }

    public async Task Submit()
    {
        try
        {
            await Http.DeleteFromJsonAsync<Cliente>($"api/clientes/{Cliente.Id}");
            SnackBar.Add("Cliente Deletado com Sucesso", Severity.Success);
        }
        catch (Exception e)
        {
            SnackBar.Add($"Ocorreu um erro ao deletar o Cliente \n Erro; {e.Message}");
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();

    
}