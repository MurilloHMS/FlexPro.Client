@using FlexPro.Client.Domain.Enums
@using FlexPro.Client.Models.Request
@using FlexPro.Client.Models.Response
@inject HttpClient Http
@inject ISnackbar Snackbar

@attribute [Authorize]

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="isFormValid">
            <MudTextField Label="Código do Sistema" @bind-Value="_produto.CodigoSistema" Required="true" />
            <MudTextField Label="Nome" @bind-Value="_produto.Nome" Required="true" />
            <MudTextField Label="Descrição" @bind-Value="_produto.Descricao" />
            <MudTextField Label="Cor" @bind-Value="_produto.Cor" />
            <MudTextField Label="Diluição" @bind-Value="_produto.Diluicao" />

            <MudText Typo="Typo.subtitle2" Class="mt-4">Imagem</MudText>
            <InputFile OnChange="OnImageSelected" />
            @if (_produto.Imagem is not null)
            {
                <img src="@($"data:image/png;base64,{Convert.ToBase64String(_produto.Imagem)}")" alt="Preview" style="max-height:150px; margin-top: 10px;" />
            }

            <MudSelect T="Departamento" Label="Departamentos" @bind-SelectedValues="_produto.Departamentos" MultiSelection="true" Required="true">
                @foreach (var d in _departamentos)
                {
                    <MudSelectItem Value="d">@d.Nome</MudSelectItem>
                }
            </MudSelect>

            <MudSelect T="Embalagem" Label="Embalagens" @bind-SelectedValues="_produto.Embalagems" MultiSelection="true">
                @foreach (var e in _embalagens)
                {
                    <MudSelectItem Value="e">@e.TipoEmbalagem</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Secondary">Cancelar</MudButton>
        <MudButton OnClick="Salvar" Color="Color.Primary" Disabled="!isFormValid">Salvar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private ProdutoLojaResponse _produto = new();
    private MudForm form;
    private bool isFormValid;

    private List<Departamento> _departamentos = new();
    private List<Embalagem> _embalagens = new();

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }

    [Parameter] public ProdutoLojaResponse produtoLoja { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        if (produtoLoja is not null)
            _produto = produtoLoja;
        else
            _produto = new ProdutoLojaResponse { Departamentos = new List<Departamento>(), Embalagems = new List<Embalagem>() };

        _departamentos = await Http.GetFromJsonAsync<List<Departamento>>("api/departamentos");
        _embalagens = await Http.GetFromJsonAsync<List<Embalagem>>("api/embalagens");
    }

    private void CloseDialog() => MudDialog.Cancel();

    private async Task Salvar()
    {
        try
        {
            HttpResponseMessage response;
            if (_produto.Id > 0)
                response = await Http.PutAsJsonAsync($"api/produtosloja/{_produto.Id}", _produto);
            else
                response = await Http.PostAsJsonAsync("api/produtosloja", _produto);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Produto salvo com sucesso!", Severity.Success);
                MudDialog.Close(DialogResult.Ok(_produto));
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Snackbar.Add($"Erro ao salvar: {response.StatusCode} - {error}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro inesperado: {ex.Message}", Severity.Error);
        }
    }

    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using var stream = file.OpenReadStream(5 * 1024 * 1024); // 5MB máx
            using var ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            _produto.Imagem = ms.ToArray();
        }
    }
}

