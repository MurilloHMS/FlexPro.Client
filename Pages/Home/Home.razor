@page "/"

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <NotAuthorized>
        <MudText Typo="Typo.h2" Align="Align.Center">Bem vindo ao FlexPro</MudText>
        <MudText Typo="Typo.h6" Align="Align.Center">WebApp Desenvolvido para agrupar ferramentas que auxiliam o trabalho na Proauto Kimium</MudText>
    </NotAuthorized>
    <Authorized>
        <MudTabs Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="Abastecimento">
                <MudPaper Elevation="2">
                    <MudToolBar>
                        <MudIconButton Icon="@Icons.Material.Outlined.Autorenew" Color="Color.Inherit" class="mr-5" OnClick="() => UpdateFuelSupply()"/>
                    </MudToolBar>
                </MudPaper>
                <br><br>
                <MudGrid>
                    <MudItem xs="12" sm="3">
                        <MudCard>
                            <MudCardContent>
                                <MudText Align="Align.Center" Style="font-weight: bold;">Total Abastecido</MudText>
                                <MudText Align="Align.Center">@_totalAbastecido.ToString("N0")</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="3">
                        <MudCard>
                            <MudCardContent>
                                <MudText Align="Align.Center" Style="font-weight: bold;">Total Média Km/L</MudText>
                                <MudText Align="Align.Center">@_mediaKmPorLitro.ToString("F2")</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="3">
                        <MudCard>
                            <MudCardContent>
                                <MudText Align="Align.Center" Style="font-weight: bold;">Total Gasto</MudText>
                                <MudText Align="Align.Center">@_totalGasto.ToString("C")</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="3">
                        <MudCard>
                            <MudCardContent>
                                <MudText Align="Align.Center" Style="font-weight: bold;">Total Km Percorrido</MudText>
                                <MudText Align="Align.Center">@_totalKmPercorrido.ToString("N0")</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudPaper Elevation="1">
                            <MudText Typo="Typo.body1" Align="Align.Center">Top 5 Maiores consumos</MudText>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudPaper Elevation="1">
                            <MudText Typo="Typo.body1" Align="Align.Center">Top 5 Maiores gastos</MudText>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" sm="4">
                        <MudPaper Elevation="1">
                            <MudText Typo="Typo.body1" Align="Align.Center">Top 5 Maiores distancias percorridas</MudText>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudTabPanel>
            <MudTabPanel Text="Veículos">
                
            </MudTabPanel>
        </MudTabs>
    </Authorized>
</AuthorizeView>

@code {
    [Inject]
    private HttpClient Http { get; set; }

    private double _totalAbastecido = default;
    private double _mediaKmPorLitro = default;
    private decimal _totalGasto = default;
    private double _totalKmPercorrido = default;

    private async Task UpdateFuelSupply()
    {
        var fuelSupply = await Http.GetFromJsonAsync<List<Abastecimento>>("api/abastecimento");
        if (!fuelSupply.Any())
            return;

        _totalAbastecido = fuelSupply.Sum(a => a.Litros);
        _mediaKmPorLitro = fuelSupply.Average(a => a.MediaKm);
        _totalGasto = fuelSupply.Sum(a => a.ValorTotalTransacao);
        _totalKmPercorrido = fuelSupply.Sum(a => a.DiferencaHodometro);
    }
}